repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { url 'http://tehnut.info/maven/' }
    maven { url 'http://chickenbones.net/maven' }
    mavenCentral()
}

dependencies {
    //compile('mcp.mobius.waila:Waila:'+config.waila_version+":dev")
    //compile "info.amerifrance.guideapi:Guide-API:"+config.minecraft_version+"-"+config.guide_api_version+":deobf"
    //compile group: 'org.eclipse.jdt', name: 'org.eclipse.jdt.annotation', version: '1.1.0'
    //runtime "codechicken:CodeChickenCore:"+config.minecraft_version+"-"+config.chicken_core_version+":dev"
}

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    mappings = "snapshot_20160312"
    runDir = "run"
    replaceIn "util/REFERENCE.java"
    replace "@VERSION@", "${project.mod_version}"
    replace "@MVERSION@", "${config.minecraft_version}"
    replace "@FVERSION@", "${config.forge_version}"
    makeObfSourceJar = false // an Srg named sources jar is made if enabled
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "m_version", project.mod_version
    inputs.property "mc_version", project.config.minecraft_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info', "*.mcmeta", "META_INF/**"
        // replace version and mcversion
        expand 'm_version': project.mod_version, 'mc_version': project.config.minecraft_version
    }
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }

    exclude '**/Thumbs.db'
}

jar {
    //Keep the jar as clean as possible
    includeEmptyDirs = false
    manifest {
        //attributes 'FMLCorePlugin': 'de.teamlapen.vampirism.coremod.VampirismFMLLoadingPlugin',
        //        'FMLCorePluginContainsFMLMod': 'true'
    }
}