tasks.register('apiJar', Jar) {
    dependsOn 'classes'
    from sourceSets.api.output
    archiveClassifier = 'api'
}

tasks.register('deobfJar', Jar) {
    description = 'Creates a JAR containing the non-obfuscated compiled code.'
    from sourceSets.main.output
    archiveClassifier = 'deobf'
}

tasks.register('sourcesJar', Jar) {
    from sourceSets.main.allJava
    from sourceSets.api.allJava
    archiveClassifier = 'sources'
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    description = 'Creates a JAR containing the JavaDocs.'
    from javadoc.destinationDir
    archiveClassifier = 'javadoc'
}

javadoc {
    options.addBooleanOption('Xdoclint:none', true)
}


artifacts {
    archives sourcesJar
    archives apiJar
    archives deobfJar
    archives javadocJar
}
//jar.finalizedBy('reobfJar')
//reobf {
//    apiJar { classpath.from(sourceSets.api.compileClasspath) }
//    jar { classpath.from(sourceSets.main.compileClasspath) }
//}
//
//task reobf {
//    dependsOn reobfJar
//    dependsOn reobfApiJar
//}