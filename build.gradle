buildscript {
    repositories {
        mavenCentral() 
        maven {  
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {url='https://repo.spongepowered.org/repository/maven-public'}
    }

    
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT', changing: true
    }
}


plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'de.undercouch.download' version '3.3.0'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'


configurations {
    optionalRuntime
    runtime.extendsFrom optionalRuntime // optionalRuntime dependencies are downloaded but not exported to POM
}

group = "de.teamlapen.vampirism"
archivesBaseName = "Vampirism"
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

//These will be overridden in gradle/versioning.gradle, but have to be defined here
ext.mod_version = "Test"
ext.type = "test"
ext.classification = "test"


sourceSets {
    api
    lib {
        compileClasspath += configurations["minecraft"]
    }
    main {
         java{
         }
        resources {
            srcDirs += 'src/generated/resources'
            exclude '.cache'
        }
        compileClasspath += sourceSets.lib.output
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
    }
    test {
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
    }
}


apply from: 'gradle/versioning.gradle'
apply from: 'gradle/forge.gradle'
apply from: 'gradle/artifacts.gradle'
apply from: 'gradle/deploy.gradle'


configurations {
    apiCompile.extendsFrom(compile)
    apiImplementation.extendsFrom(implementation)
    apiRuntimeOnly.extendsFrom(runtimeOnly)
}

idea {
    module {
        for (String excludeDirName in ["run", "out", "logs", "gradle"]) {
            File excludeDir = new File(projectDir, excludeDirName)
            excludeDirs.add(excludeDir)
        }
    }
}
